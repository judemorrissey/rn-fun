{
  // Place your rn-fun workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": [
  //     "console.log('$1');",
  //     "$2"
  //   ],
  //   "description": "Log output to console"
  // }
  "React Native Component": {
    "scope": "typescriptreact",
    "prefix": "rn-component",
    "body": [
      "import type {StyleProp, ViewStyle} from 'react-native';",
      "",
      "import * as React from 'react';",
      "import {StyleSheet, Text, View} from 'react-native';",
      "",
      "import styles from './styles';",
      "",
      "type Props = {",
      "  style?: StyleProp<ViewStyle>;",
      "};",
      "",
      "function ${1:${TM_FILENAME_BASE}}(props: Props) {",
      "  const {style} = props;",
      "",
      "  return (",
      "    <View style={StyleSheet.compose(styles.container, style)}>",
      "      <Text style={styles.text}>{`T O D O`}</Text>",
      "    </View>",
      "  );",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
      ""
    ],
    "description": "Use this for the actual component file e.g. <ComponentName>/<ComponentName>.tsx"
  },
  "React Native Styles File": {
    "scope": "typescript",
    "prefix": "rn-styles",
    "body": [
      "import type {TextStyle, ViewStyle} from 'react-native';",
      "",
      "import {StyleSheet} from 'react-native';",
      "",
      "import theme from 'lib/theme';",
      "",
      "type Styles = {",
      "  container: ViewStyle;",
      "  text: TextStyle;",
      "};",
      "",
      "export default StyleSheet.create<Styles>({",
      "  container: {",
      "    flex: 1,",
      "  },",
      "  text: {",
      "    ...theme.fonts[14],",
      "    color: theme.colors.text.importance.veryHigh,",
      "  },",
      "});",
      ""
    ],
    "description": "Use this for the <ComponentName>/styles.ts file"
  },
  "React Native Component Test": {
    "scope": "typescriptreact",
    "prefix": "rn-test-component",
    "body": [
      "import * as React from 'react';",
      "import {render} from '@testing-library/react-native';",
      "",
      "import ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} from './';",
      "",
      "it('renders correctly', () => {",
      "  render(<${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} />);",
      "});",
      "",
    ],
    "description": "Use this for the actual component file e.g. <ComponentName>/<ComponentName>.tsx"
  },
  "React Native Component Index": {
    "scope": "typescript",
    "prefix": "rn-index",
    "body": [
      "export {default} from './${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}';",
      ""
    ],
    "description": "Use this for the <ComponentName>/index.js file, so the component can be imported like `import ComponentName from \"components/ComponentName\"`"
  }
}